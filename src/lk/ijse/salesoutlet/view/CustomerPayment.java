/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.salesoutlet.view;

import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.jasper.IJSEJasperViewer;
import lk.ijse.jasper.JasperUtil;
import lk.ijse.jasper.Report;
import lk.ijse.salesoutlet.controller.CustomerPaymentController;
import lk.ijse.salesoutlet.core.dto.CustomDTO;
import lk.ijse.salesoutlet.core.dto.CustomerPaymentDTO;
import lk.ijse.salesoutlet.db.DBConnection;
import lk.ijse.salesoutlet.view.util.Validator;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperReportsContext;

/**
 *
 * @author user
 */
@Report("lk.ijse.salesoutlet.report")
public class CustomerPayment extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPayment1
     */
    public CustomerPayment() {
        initComponents();
        getCurrentDate();

        cmbOrderID.requestFocusInWindow();
        loadRequiredOrderIds();

        rbtCashPayments.doClick();
        txtCash.requestFocusInWindow();
        isCashPaymentSelected(true);
        isChequePaymentSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        rbtCashPayments = new javax.swing.JRadioButton();
        lblCash = new javax.swing.JLabel();
        txtCash = new javax.swing.JTextField();
        lblBalance = new javax.swing.JLabel();
        rbtChequePayments = new javax.swing.JRadioButton();
        lblBankBranchCode = new javax.swing.JLabel();
        txtBankBranchCode = new javax.swing.JTextField();
        lblChequeNo = new javax.swing.JLabel();
        txtChequeNo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnPrintBill = new javax.swing.JButton();
        lblPaymentDate = new javax.swing.JLabel();
        lblPaymentID = new javax.swing.JLabel();
        lblDiscount = new javax.swing.JLabel();
        lblTotalBillValue = new javax.swing.JLabel();
        lblNetBillValue = new javax.swing.JLabel();
        lblProductCount = new javax.swing.JLabel();
        cmbOrderID = new javax.swing.JComboBox<>();
        lblTxtBalance = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Customer Payments");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 250, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Payment ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 80, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Order ID");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 60, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Payment Date");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 100, 30));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 790, 10));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText(" Net Bill Value Rs.");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText(" Total Bill Value Rs.");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 120, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText(" No of Products");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 100, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText(" Total Discount Rs.");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 120, 30));

        rbtCashPayments.setBackground(new java.awt.Color(235, 233, 233));
        buttonGroup1.add(rbtCashPayments);
        rbtCashPayments.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        rbtCashPayments.setMnemonic('y');
        rbtCashPayments.setText("CASH PAYMENTS");
        rbtCashPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCashPaymentsActionPerformed(evt);
            }
        });
        add(rbtCashPayments, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 130, 30));

        lblCash.setDisplayedMnemonic('h');
        lblCash.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCash.setLabelFor(txtCash);
        lblCash.setText(" Cash Rs.");
        add(lblCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, 60, 30));

        txtCash.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCashActionPerformed(evt);
            }
        });
        add(txtCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 190, 30));

        lblBalance.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBalance.setText("Balance Rs.");
        add(lblBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, 80, 30));

        rbtChequePayments.setBackground(new java.awt.Color(235, 233, 233));
        buttonGroup1.add(rbtChequePayments);
        rbtChequePayments.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        rbtChequePayments.setMnemonic('q');
        rbtChequePayments.setText("CHEQUE PAYMENTS");
        rbtChequePayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtChequePaymentsActionPerformed(evt);
            }
        });
        add(rbtChequePayments, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, 30));

        lblBankBranchCode.setDisplayedMnemonic('b');
        lblBankBranchCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBankBranchCode.setLabelFor(txtBankBranchCode);
        lblBankBranchCode.setText("Bank-Branch Code");
        add(lblBankBranchCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 510, 120, 30));

        txtBankBranchCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(txtBankBranchCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 510, 140, 30));

        lblChequeNo.setDisplayedMnemonic('c');
        lblChequeNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChequeNo.setLabelFor(txtChequeNo);
        lblChequeNo.setText("  Cheque No.");
        add(lblChequeNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 80, 30));

        txtChequeNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtChequeNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChequeNoActionPerformed(evt);
            }
        });
        add(txtChequeNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, 140, 30));

        jLabel11.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 255)));
        jLabel11.setOpaque(true);
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 740, 80));

        btnPrintBill.setBackground(new java.awt.Color(204, 255, 204));
        btnPrintBill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrintBill.setText("PRINT BILL");
        btnPrintBill.setToolTipText("Add Payment Details and Print Bill");
        btnPrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintBillActionPerformed(evt);
            }
        });
        add(btnPrintBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 610, 150, 50));

        lblPaymentDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPaymentDate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(lblPaymentDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, 140, 30));

        lblPaymentID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPaymentID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(lblPaymentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 80, 30));

        lblDiscount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDiscount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(lblDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, 140, 30));

        lblTotalBillValue.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTotalBillValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(lblTotalBillValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 190, 30));

        lblNetBillValue.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNetBillValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(lblNetBillValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 190, 30));

        lblProductCount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblProductCount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(lblProductCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 140, 30));

        cmbOrderID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbOrderID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrderIDItemStateChanged(evt);
            }
        });
        add(cmbOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 110, 30));

        lblTxtBalance.setBackground(new java.awt.Color(255, 255, 255));
        lblTxtBalance.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTxtBalance.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblTxtBalance.setOpaque(true);
        add(lblTxtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, 140, 30));

        jLabel12.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 255)));
        jLabel12.setOpaque(true);
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 740, 80));
    }// </editor-fold>//GEN-END:initComponents

    private void txtCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCashActionPerformed
        String amount = txtCash.getText();
        double totAmount = Double.parseDouble(txtCash.getText());

        if (rbtCashPayments.isSelected()) {

            if (!Validator.isValidPrice(amount)) {

                JOptionPane.showMessageDialog(this, "Please enter a vaild amount");
                txtCash.selectAll();
                txtCash.requestFocusInWindow();
                return;

            } else {

                if (totAmount < Double.parseDouble(lblNetBillValue.getText())) {
                    JOptionPane.showMessageDialog(this, "Please enter a vaild amount");
                    txtCash.selectAll();
                    txtCash.requestFocusInWindow();
                    return;
                }
            }
        }

        double balance = totAmount - Double.parseDouble(lblNetBillValue.getText());
        lblTxtBalance.setText(Double.toString(balance));
        btnPrintBill.requestFocusInWindow();
    }//GEN-LAST:event_txtCashActionPerformed

    private void rbtChequePaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtChequePaymentsActionPerformed
        if (rbtChequePayments.isSelected()) {
            isChequePaymentSelected(true);
            txtCash.requestFocusInWindow();
            isCashPaymentSelected(false);
        }
    }//GEN-LAST:event_rbtChequePaymentsActionPerformed

    private void cmbOrderIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrderIDItemStateChanged
        String orderID = (String) cmbOrderID.getSelectedItem();
        try {
            CustomDTO orderData = CustomerPaymentController.getOrderData(new CustomDTO(orderID));
            lblPaymentID.setText(orderData.getPaymentId());
            lblTotalBillValue.setText(Double.toString(orderData.getTotalValue()));
            lblNetBillValue.setText(Double.toString(orderData.getNetValue()));
            lblProductCount.setText(Integer.toString(orderData.getProductCount()));
            lblDiscount.setText(Double.toString(orderData.getTotalValue() - orderData.getNetValue()));
        } catch (Exception ex) {
            Logger.getLogger(CustomerPayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbOrderIDItemStateChanged

    private void rbtCashPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCashPaymentsActionPerformed
        if (rbtCashPayments.isSelected()) {
            isCashPaymentSelected(true);
            txtChequeNo.requestFocusInWindow();
            isChequePaymentSelected(false);
        }
    }//GEN-LAST:event_rbtCashPaymentsActionPerformed

    private void btnPrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintBillActionPerformed
        boolean paymentAdded = false;
        if (rbtChequePayments.isSelected()) {

            String chequeNo = txtChequeNo.getText();
            if (!Validator.isValidChequeNo(chequeNo)) {
                JOptionPane.showMessageDialog(this, "Please enter a vaild Cheque No");
                txtChequeNo.selectAll();
                txtChequeNo.requestFocusInWindow();
                return;
            }

            String bankBranchCode = txtBankBranchCode.getText();
            if (!Validator.isValidBankBranch(bankBranchCode)) {
                JOptionPane.showMessageDialog(this, "Please enter a vaild bank-branch Code");
                txtBankBranchCode.selectAll();
                txtBankBranchCode.requestFocusInWindow();
                return;
            }

            try {
                paymentAdded = CustomerPaymentController.updatePayment(new CustomerPaymentDTO(
                        lblPaymentID.getText(),
                        Double.parseDouble(lblTotalBillValue.getText()),
                        Double.parseDouble(lblNetBillValue.getText()),
                        "Payed",
                        txtChequeNo.getText(),
                        txtBankBranchCode.getText()
                ));
            } catch (Exception ex) {
                Logger.getLogger(CustomerPayment.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (rbtCashPayments.isSelected()) {
            double totAmount = Double.parseDouble(lblNetBillValue.getText());
            try {
                if (!Validator.isValidPrice(txtCash.getText())) {

                    JOptionPane.showMessageDialog(this, "Please enter a vaild amount");
                    txtCash.selectAll();
                    txtCash.requestFocusInWindow();
                    return;
                } else {

                    if (totAmount < Double.parseDouble(lblNetBillValue.getText())) {
                        JOptionPane.showMessageDialog(this, "Please enter a vaild amount");
                        txtCash.selectAll();
                        txtCash.requestFocusInWindow();
                        return;
                    }
                }

                double balance = totAmount - Double.parseDouble(lblNetBillValue.getText());
                lblTxtBalance.setText(Double.toString(balance));
                
                paymentAdded = CustomerPaymentController.updatePayment(new CustomerPaymentDTO(
                        lblPaymentID.getText(),
                        Double.parseDouble(lblTotalBillValue.getText()),
                        Double.parseDouble(lblNetBillValue.getText()),
                        "Payed",
                        "",
                        ""
                ));

            } catch (Exception ex) {
                Logger.getLogger(CustomerPayment.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (paymentAdded) {
            try {
                JOptionPane.showMessageDialog(this, "Payment was done successfully.Ready to print bill.");

                JasperUtil.init(CustomerPayment.class);

                JasperReportsContext ctx = JasperUtil.getReportContext();

                JasperReport compiledReport = JasperUtil.getCompiledReport("CustomerBill.jasper");

                JasperFillManager fillManager = JasperFillManager.getInstance(ctx);

                HashMap<String, Object> reportParams = new HashMap<>();
                reportParams.put("orderId", cmbOrderID.getSelectedItem());

                Connection connection = DBConnection.getInstance().getConnection();

                JasperPrint filledReport = fillManager.fill(compiledReport, reportParams, connection);

                IJSEJasperViewer frmViewer = new IJSEJasperViewer(filledReport);
                frmViewer.setTitle("Customer Bill");
                frmViewer.setVisible(true);
            } catch (JRException ex) {
                Logger.getLogger(CustomerPayment.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        } else {
            JOptionPane.showMessageDialog(this, "Payment details were not successfully submitted due to some reasons.Try Again");
        }
    }//GEN-LAST:event_btnPrintBillActionPerformed

    private void txtChequeNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChequeNoActionPerformed
        String chequeNo = txtChequeNo.getText();
        if (!chequeNo.matches("\\d{6}")) {
            JOptionPane.showMessageDialog(this, "Please enter a cheque number");
            txtCash.selectAll();
            txtCash.requestFocusInWindow();
            return;
        }
    }//GEN-LAST:event_txtChequeNoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrintBill;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cmbOrderID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblBankBranchCode;
    private javax.swing.JLabel lblCash;
    private javax.swing.JLabel lblChequeNo;
    private javax.swing.JLabel lblDiscount;
    private javax.swing.JLabel lblNetBillValue;
    private javax.swing.JLabel lblPaymentDate;
    private javax.swing.JLabel lblPaymentID;
    private javax.swing.JLabel lblProductCount;
    private javax.swing.JLabel lblTotalBillValue;
    private javax.swing.JLabel lblTxtBalance;
    private javax.swing.JRadioButton rbtCashPayments;
    private javax.swing.JRadioButton rbtChequePayments;
    private javax.swing.JTextField txtBankBranchCode;
    private javax.swing.JTextField txtCash;
    private javax.swing.JTextField txtChequeNo;
    // End of variables declaration//GEN-END:variables

    private void getCurrentDate() {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        String format = sdf.format(date);
        lblPaymentDate.setText(format);
    }

    private void loadRequiredOrderIds() {
        try {
            ArrayList<String> loadOrderData = CustomerPaymentController.loadOrderIDs();
            for (String customDTO : loadOrderData) {
                cmbOrderID.addItem(customDTO);
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void isCashPaymentSelected(boolean value) {
        lblCash.setEnabled(value);
        txtCash.setEnabled(value);
        txtCash.setText(null);
        lblBalance.setEnabled(value);
        lblTxtBalance.setEnabled(value);
        lblTxtBalance.setText(null);

    }

    private void isChequePaymentSelected(boolean value) {
        lblChequeNo.setEnabled(value);
        txtChequeNo.setEnabled(value);
        txtChequeNo.setText(null);
        lblBankBranchCode.setEnabled(value);
        txtBankBranchCode.setEnabled(value);
        txtBankBranchCode.setText(null);
    }
}
